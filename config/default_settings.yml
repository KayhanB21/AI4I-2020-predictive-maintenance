DEFAULT:
  NOTEBOOK:
    DATA_SOURCE_PATH: './data/ai4i2020.csv'
    PLOT_KDE_FUNC:
      MACHINE_FAILURE_0:
        LINE_STYLE: '--'
        LINE_WIDTH: 2
        LINE_COLOR: blue
      MACHINE_FAILURE_1:
        LINE_STYLE: '-'
        LINE_WIDTH: 2
        LINE_COLOR: red
    PLOT_KDE_MULTIPLE_FUNC:
      MACHINE_FAILURE_0:
        L:
          LINE_STYLE: '--'
          LINE_WIDTH: 1
          LINE_COLOR: blue
        M:
          LINE_STYLE: '--'
          LINE_WIDTH: 2.5
          LINE_COLOR: blue
        H:
          LINE_STYLE: '--'
          LINE_WIDTH: 4
          LINE_COLOR: blue
      MACHINE_FAILURE_1:
        L:
          LINE_STYLE: '-'
          LINE_WIDTH: 1
          LINE_COLOR: red
        M:
          LINE_STYLE: '-'
          LINE_WIDTH: 2.5
          LINE_COLOR: red
        H:
          LINE_STYLE: '-'
          LINE_WIDTH: 4
          LINE_COLOR: red




# Source: https://stackoverflow.com/questions/19109912/yaml-do-i-need-quotes-for-strings-in-yaml
# Use quotes to force a string, error.g. if your key or value is 10, but you want it to return a String and not a Fixnum, write '10' or "10".
# Use quotes if your value includes special characters, (error.g. :, {, }, [, ], ,, &, *, #, ?, |, -, <, >, =, !, %, @, \).
# Single quotes let you put almost any character in your string, and won't try to parse escape codes. '\n' would be returned as the string \n.
# Double quotes parse escape codes. "\n" would be returned as a line feed character.
# The exclamation mark introduces a method, error.g. !ruby/sym to return a Ruby symbol.